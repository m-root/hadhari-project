"""
Django settings for formly project.

Generated by 'django-admin startproject' using Django 1.9.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""
import os
# import builtins

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

SET = False


def set_settings(project_name=None, instance_dir=None):
    global SET
    # global PROJECT_NAME
    # global INSTANCE_DIR

    global STATIC_ROOT
    global STATIC_URL

    global MEDIA_URL
    global MEDIA_ROOT

    if project_name:
        builtins.PROJECT_NAME = project_name
    else:
        builtins.PROJECT_NAME = 'prj'

    if instance_dir:
        print('setting INSTANCE_DIR to '+instance_dir)
        builtins.INSTANCE_DIR = instance_dir
    else:
        builtins.INSTANCE_DIR = '/srv/' + PROJECT_NAME + '/'

    STATIC_URL = '/static/'
    STATIC_ROOT = os.path.join(INSTANCE_DIR, 'static')

    MEDIA_URL = '/media/'
    MEDIA_ROOT = os.path.join(INSTANCE_DIR, 'media')

    SET = True


# if not SET: set_settings()




# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '!_)!#e&^k+d9-coo#*e6%iwx_1$lqn=8_m)zmo96#*lpq3ffeh'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.gis',
    'authentication',
    'web',
    'map',
    'core',
    # 'importer',

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'core.middlewares.OrganisationFromSubDomainMiddleware',
    # 'authentication.middleware.AuthRequiredMiddleware',
]

ROOT_URLCONF = 'prj.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'prj.wsgi.application'

# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases

# DATABASES = {
# 'default': {
#     'ENGINE': 'django.db.backends.sqlite3',
#     'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
# }

# }

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.contrib.gis.db.backends.postgis',
#         'NAME': 'mapping2',
#         'USER': 'mapping',
#         'PASSWORD': 'mapping',
#         'HOST': 'localhost',
#         'PORT': '',
#     }
# }

LOGIN_URL = '/login/'
LOGIN_EXEMPT_URLS = (
    'static/',
    'api/',
    'password_reset/',
    'reset/',
)
INDEX_URL = '/'

AUTH_USER_MODEL = 'authentication.Account'

if DEBUG:
    EMAIL_HOST = 'smtp.mailtrap.io'
    EMAIL_HOST_USER = '0214920fb35621'
    EMAIL_HOST_PASSWORD = '6239ad1f8c3275'
    EMAIL_PORT = '2525'

    # EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

else:
    EMAIL_HOST = 'smtp.sendgrid.net'
    EMAIL_PORT = 587
    EMAIL_HOST_USER = 'sendgrid_username'
    EMAIL_HOST_PASSWORD = 'sendgrid_password'
    EMAIL_USE_TLS = True

# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

TIME_INPUT_FORMATS = ('%H:%M %p',)  # '4:30 AM'

ROOT_URL = '/'
# STATICFILES_DIRS = (BASE_DIR, 'web/static')


# Logging
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            'propagate': True,
            'level': 'INFO' # if DEBUG else 'INFO'
        },
        'prj': {
            'handlers': ['console'],
            'propagate': True,
            'level': 'DEBUG' if DEBUG else 'INFO'
        }

    },
}



# tmp
PROJECT_NAME = 'mapping_app'
INSTANCE_DIR = '/tmp/'+PROJECT_NAME+'/'

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(INSTANCE_DIR, 'static')

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(INSTANCE_DIR, 'media')

# print(STATIC_URL)
# Settings that Override prj.settings

# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.contrib.gis.db.backends.postgis',
        'NAME': 'mapping2',
        'USER': 'mapping',
        'PASSWORD': 'mapping',
        'HOST': 'localhost',
        'PORT': '',
    },
    'legacy': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'root',
        'USER': 'root',
        'PASSWORD': 'root',
        'HOST': 'home',
        'PORT': '',
    }
}

DATABASE_ROUTERS = ['importer.db_router.Legacy', ]


GOOGLE_MAPS_API_KEY = 'AIzaSyCmIybWh44zOpvfjfHa9WVofbeeTbFeVJw'

# end tmp



"""
"""
# Django settings for Hadhari project.
#
# Generated by 'django-admin startproject' using Django 1.11.7.
#
# For more information on this file, see
# https://docs.djangoproject.com/en/1.11/topics/settings/
#
# For the full list of settings and their values, see
# https://docs.djangoproject.com/en/1.11/ref/settings/
"""
# 
# import os
# 
# # Build paths inside the project like this: os.path.join(BASE_DIR, ...)
# BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
# 
# 
# # Quick-start development settings - unsuitable for production
# # See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/
# 
# # SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = 'nq4yks&5s3d4rxh6835o#-x*5e)u0c3t8fdnpe!jyw0qzfil_7'
# 
# # SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = True
# 
# ALLOWED_HOSTS = ['*']
# 
# 
# # Application definition
# 
# INSTALLED_APPS = [
#     'django.contrib.admin',
#     'django.contrib.auth',
#     'django.contrib.contenttypes',
#     'django.contrib.sessions',
#     'django.contrib.messages',
#     'django.contrib.staticfiles',
#     'rest_framework',
#     'rest_framework.authtoken',
# 
# 
#     'core',
#     'web',
#     'api',
#     'reports',
#     'notification',
# 
# 
# ]
# 
# MIDDLEWARE = [
#     'django.middleware.security.SecurityMiddleware',
#     'django.contrib.sessions.middleware.SessionMiddleware',
#     'django.middleware.common.CommonMiddleware',
#     'django.middleware.csrf.CsrfViewMiddleware',
#     'django.contrib.auth.middleware.AuthenticationMiddleware',
#     'django.contrib.messages.middleware.MessageMiddleware',
#     'django.middleware.clickjacking.XFrameOptionsMiddleware',
#     'core.middlewares.AuthRequiredMiddleware',
# 
# ]
# 
# ROOT_URLCONF = 'hadhari.urls'
# 
# TEMPLATES = [
#     {
#         'BACKEND': 'django.template.backends.django.DjangoTemplates',
#         'DIRS': [],
#         'APP_DIRS': True,
#         'OPTIONS': {
#             'context_processors': [
#                 'django.template.context_processors.debug',
#                 'django.template.context_processors.request',
#                 'django.contrib.auth.context_processors.auth',
#                 'django.contrib.messages.context_processors.messages',
#             ],
#         },
#     },
# ]
# 
# WSGI_APPLICATION = 'hadhari.wsgi.application'
# 
# 
# # Database
# # https://docs.djangoproject.com/en/1.11/ref/settings/#databases
# 
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
#     }
# }
# 
# REST_FRAMEWORK = {
# 
#     'PAGE_SIZE': 5,
#     'DEFAULT_AUTHENTICATION_CLASSES': (
#         'rest_framework.authentication.BasicAuthentication',
#         'rest_framework.authentication.SessionAuthentication',
#     ),
#     'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination'
# }
# 
# # Password validation
# # https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators
# 
# AUTH_PASSWORD_VALIDATORS = [
#     {
#         'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
#     },
# ]
# 
# 
# # Internationalization
# # https://docs.djangoproject.com/en/1.11/topics/i18n/
# 
# LANGUAGE_CODE = 'en-us'
# 
# TIME_ZONE = 'UTC'
# 
# USE_I18N = True
# 
# USE_L10N = True
# 
# USE_TZ = True
# 
# 
# # Static files (CSS, JavaScript, Images)
# # https://docs.djangoproject.com/en/1.11/howto/static-files/
# 
# STATIC_URL = '/static/'
# STATIC_ROOT = os.path.join(BASE_DIR, 'static_root')
# 
# MEDIA_ROOT = os.path.join(BASE_DIR, 'media_root')
# MEDIA_URL = '/media/'
# 
# if DEBUG:
#     EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
# else:
#     EMAIL_HOST = 'smtp.sendgrid.net'
#     EMAIL_PORT = 587
#     EMAIL_HOST_USER = 'sendgrid_username'
#     EMAIL_HOST_PASSWORD = 'sendgrid_password'
#     EMAIL_USE_TLS = True
# 
# AUTH_USER_MODEL = 'core.Account'
# 
# LOGIN_URL = '/login/'
# LOGIN_EXEMPT_URLS = (
#     'static/',
#     'api/',
#     'password_reset/',
#     'reset/',
# )
# INDEX_URL = '/'
# 
# # Logging
# LOGGING = {
#     'version': 1,
#     'disable_existing_loggers': False,
#     'handlers': {
#         'console': {
#             'class': 'logging.StreamHandler',
#         },
#     },
#     'loggers': {
#         'django': {
#             'handlers': ['console'],
#             'propagate': True,
#             'level': 'INFO'
#         }
#     },
# }


"""